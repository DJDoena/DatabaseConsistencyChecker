<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AndItem" xml:space="preserve">
    <value>Logic: Combine filters/checks with AND</value>
  </data>
  <data name="ExceptItem" xml:space="preserve">
    <value>Logic: Exclude profiles</value>
  </data>
  <data name="HasAspectRatioItem" xml:space="preserve">
    <value>Video Format: Aspect Ratio must be set</value>
  </data>
  <data name="HasAudioTrackItem" xml:space="preserve">
    <value>Audio Track: Must contain given value</value>
  </data>
  <data name="HasAudioTracksItem" xml:space="preserve">
    <value>Audio Track: Must contain audio tracks</value>
  </data>
  <data name="HasBoxSetChildrenItem" xml:space="preserve">
    <value>Box set: Must have child profiles</value>
  </data>
  <data name="HasCaseTypeItem" xml:space="preserve">
    <value>Case Type: Must be set</value>
  </data>
  <data name="HasCastItem" xml:space="preserve">
    <value>Cast: Must contain cast members</value>
  </data>
  <data name="HasCollectionNumberItem" xml:space="preserve">
    <value>Collection Number: Must be set</value>
  </data>
  <data name="HasColorFormatItem" xml:space="preserve">
    <value>Video Format: Any Color Format must be checked</value>
  </data>
  <data name="HasCountryOfOriginsItem" xml:space="preserve">
    <value>Country of Origin: Must contain countries of origin</value>
  </data>
  <data name="HasCrewItem" xml:space="preserve">
    <value>Crew: Must contain crew members</value>
  </data>
  <data name="HasCustomMediaTypeItem" xml:space="preserve">
    <value>Media Type: Custom Type must be set</value>
  </data>
  <data name="HasDimensionsItem" xml:space="preserve">
    <value>Video Format: Any Dimension must be checked</value>
  </data>
  <data name="HasDiscsItem" xml:space="preserve">
    <value>Disc: Must contain discs</value>
  </data>
  <data name="HasDVDReviewItem" xml:space="preserve">
    <value>Review DVD: Must be set</value>
  </data>
  <data name="HasEasterEggsItem" xml:space="preserve">
    <value>Easter Eggs: Must be set</value>
  </data>
  <data name="HasEventItem" xml:space="preserve">
    <value>Event: Must contain event of the given event type and user</value>
  </data>
  <data name="HasFeaturesItem" xml:space="preserve">
    <value>Features: Must contain features</value>
  </data>
  <data name="HasGenreItem" xml:space="preserve">
    <value>Genre: Must contain given value</value>
  </data>
  <data name="HasGenresItem" xml:space="preserve">
    <value>Genre: Must contain genres</value>
  </data>
  <data name="HasMediaCompaniesItem" xml:space="preserve">
    <value>Media Company: Must contain media companies</value>
  </data>
  <data name="HasMovieReviewItem" xml:space="preserve">
    <value>Review Movie: Must be set</value>
  </data>
  <data name="HasOnlinePrivateExclusionItem" xml:space="preserve">
    <value>Exclusion: Must be excluded from online private listing</value>
  </data>
  <data name="HasOnlinePublicExclusionItem" xml:space="preserve">
    <value>Exclusion: Must be excluded from online public listing</value>
  </data>
  <data name="HasOverviewItem" xml:space="preserve">
    <value>Overview: Must be set</value>
  </data>
  <data name="HasPDAExclusionItem" xml:space="preserve">
    <value>Exclusion: Must be excluded from DVD Profiler Mobile (PDA)</value>
  </data>
  <data name="HasProductionYearItem" xml:space="preserve">
    <value>Production Year: Must be set</value>
  </data>
  <data name="HasPurchaseCurrencyItem" xml:space="preserve">
    <value>Purchase: Currency must be set</value>
  </data>
  <data name="HasPurchaseDateItem" xml:space="preserve">
    <value>Purchase: Date must be set</value>
  </data>
  <data name="HasPurchasePlaceItem" xml:space="preserve">
    <value>Purchase: Place must be set</value>
  </data>
  <data name="HasPurchasePriceItem" xml:space="preserve">
    <value>Purchase: Price must be set</value>
  </data>
  <data name="HasRatingItem" xml:space="preserve">
    <value>Rating: Must be set</value>
  </data>
  <data name="HasReleaseDateItem" xml:space="preserve">
    <value>Release Date: Must be set</value>
  </data>
  <data name="HasRunningTimeItem" xml:space="preserve">
    <value>Running Time: Must be set</value>
  </data>
  <data name="HasSmartphoneExclusionItem" xml:space="preserve">
    <value>Exclusion: Must be excluded from DVD Profiler for iPhone / Android</value>
  </data>
  <data name="HasSRPCurrencyItem" xml:space="preserve">
    <value>SRP: Currency must be set</value>
  </data>
  <data name="HasSRPPriceItem" xml:space="preserve">
    <value>SRP: Price must be set</value>
  </data>
  <data name="HasStudiosItem" xml:space="preserve">
    <value>Studio: Must contain studios</value>
  </data>
  <data name="HasSubtitleItem" xml:space="preserve">
    <value>Subtitle: Must contain given value</value>
  </data>
  <data name="HasSubtitlesItem" xml:space="preserve">
    <value>Subtitle: Must contain subtitles</value>
  </data>
  <data name="HasTagItem" xml:space="preserve">
    <value>Tag: Must contain given value</value>
  </data>
  <data name="HasVideoFormatItem" xml:space="preserve">
    <value>Video Format: Any Video Format must be checked</value>
  </data>
  <data name="IsCaseTypeItem" xml:space="preserve">
    <value>Case Type: Must be equal to given value</value>
  </data>
  <data name="IsCollectionTypeItem" xml:space="preserve">
    <value>Collection Type: Must be part of given collection type value</value>
  </data>
  <data name="IsCountAsItem" xml:space="preserve">
    <value>Count As: Must be equal to given value</value>
  </data>
  <data name="IsCustomMediaTypeItem" xml:space="preserve">
    <value>Media Type: Custom Type must be equal to given value</value>
  </data>
  <data name="IsMediaTypeBluRayItem" xml:space="preserve">
    <value>Media Type: Must be Blu-ray</value>
  </data>
  <data name="IsMediaTypeDVDItem" xml:space="preserve">
    <value>Media Type: Must be DVD</value>
  </data>
  <data name="IsMediaTypeHDDVDItem" xml:space="preserve">
    <value>Media Type: Must be HD-DVD</value>
  </data>
  <data name="IsMediaTypeUltraHDItem" xml:space="preserve">
    <value>Media Type: Must be Ultra-HD</value>
  </data>
  <data name="IsPartOfOwnedCollectionItem" xml:space="preserve">
    <value>Collection Type: Must be part of Owned collection</value>
  </data>
  <data name="IsPurchaseCurrencyItem" xml:space="preserve">
    <value>Purchase: Currency must be equal to given value</value>
  </data>
  <data name="IsPurchasePlaceItem" xml:space="preserve">
    <value>Purchase: Place must be equal to given value</value>
  </data>
  <data name="IsRatingItem" xml:space="preserve">
    <value>Rating: Must be equal to given value</value>
  </data>
  <data name="IsRatingSystemItem" xml:space="preserve">
    <value>Rating: Rating System must be equal to given value</value>
  </data>
  <data name="OrItem" xml:space="preserve">
    <value>Logic: Combine filters/checks with OR</value>
  </data>
</root>